// Generated by view binder compiler. Do not edit!
package com.example.stoplyingdown.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.stoplyingdown.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView activityCardBackground;

  @NonNull
  public final TextView activityName;

  @NonNull
  public final AppCompatButton btnFinish;

  @NonNull
  public final CardView cardActivityView;

  @NonNull
  public final ImageView darkmode;

  @NonNull
  public final AppCompatButton deleteButton;

  @NonNull
  public final TextView description;

  private ActivityCardBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView activityCardBackground, @NonNull TextView activityName,
      @NonNull AppCompatButton btnFinish, @NonNull CardView cardActivityView,
      @NonNull ImageView darkmode, @NonNull AppCompatButton deleteButton,
      @NonNull TextView description) {
    this.rootView = rootView;
    this.activityCardBackground = activityCardBackground;
    this.activityName = activityName;
    this.btnFinish = btnFinish;
    this.cardActivityView = cardActivityView;
    this.darkmode = darkmode;
    this.deleteButton = deleteButton;
    this.description = description;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activity_card_background;
      ImageView activityCardBackground = ViewBindings.findChildViewById(rootView, id);
      if (activityCardBackground == null) {
        break missingId;
      }

      id = R.id.activity_name;
      TextView activityName = ViewBindings.findChildViewById(rootView, id);
      if (activityName == null) {
        break missingId;
      }

      id = R.id.btn_finish;
      AppCompatButton btnFinish = ViewBindings.findChildViewById(rootView, id);
      if (btnFinish == null) {
        break missingId;
      }

      id = R.id.cardActivityView;
      CardView cardActivityView = ViewBindings.findChildViewById(rootView, id);
      if (cardActivityView == null) {
        break missingId;
      }

      id = R.id.darkmode;
      ImageView darkmode = ViewBindings.findChildViewById(rootView, id);
      if (darkmode == null) {
        break missingId;
      }

      id = R.id.deleteButton;
      AppCompatButton deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      return new ActivityCardBinding((ConstraintLayout) rootView, activityCardBackground,
          activityName, btnFinish, cardActivityView, darkmode, deleteButton, description);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
